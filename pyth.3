import unittest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from flask_testing import LiveServerTestCase
from app import app

class TestLongestPalindromeE2E(LiveServerTestCase):
    def create_app(self):
        app.config['TESTING'] = True
        app.config['LIVESERVER_PORT'] = 8943
        return app

    def setUp(self):
        self.driver = webdriver.Chrome()  # You may need to specify the path to chromedriver
        self.driver.get(self.get_server_url())

    def tearDown(self):
        self.driver.quit()

    def test_find_palindrome(self):
        input_element = self.driver.find_element(By.ID, 'input_string')
        input_element.send_keys('babad')
        input_element.send_keys(Keys.RETURN)

        result_element = WebDriverWait(self.driver, 10).until(
            EC.presence_of_element_located((By.XPATH, '//h2'))
        )

        self.assertIn('Longest Palindrome: bab', result_element.text)

    def test_empty_input(self):
        input_element = self.driver.find_element(By.ID, 'input_string')
        input_element.send_keys('')
        input_element.send_keys(Keys.RETURN)

        result_element = WebDriverWait(self.driver, 10).until(
            EC.presence_of_element_located((By.XPATH, '//h2'))
        )

        self.assertEqual(result_element.text, '')

if __name__ == "__main__":
    unittest.main()
